on:
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - 'contrib/**'
  pull_request:
    branches:
      - main
      - develop
    types:
      - 'review_requested'
    paths:
      - 'contrib/**'

name: contrib

jobs:
  build-contrib:
    runs-on: ubuntu-latest
    environment: IMGUR
    steps: 
      - uses: actions/checkout@v2
        name: checkout code
      - uses: xu-cheng/texlive-action/full@v1
        with:
          run: |
            apk add ghostscript imagemagick gnupg
            sed -i "s|<policy domain=\"coder\" rights=\"none\" pattern=\"PDF\" />|<policy domain=\"coder\" rights=\"read\|write\" pattern=\"PDF\" />|g" /etc/ImageMagick-*/policy.xml
            .github/ci/build_contrib.sh -halt-on-error -time -quiet -xelatex
        name: build contrib doc with XeLaTeX
      - uses: devicons/public-upload-to-imgur@v2.2.2
        id: contrib_png
        with:
          path: ./build/contrib.*.png
          client_id: ${{secrets.IMGUR_CLIENT_ID}}
        name: upload contrib img to imgur
      - uses: actions/upload-artifact@v2
        with:
          path: |
            build/contrib.*.pdf
        name: upload contrib artifacts
      - uses: jungwinter/comment@v1
        if: github.event_name == 'pull_request'
        env:
          MESSAGE: |
            感谢向 SJTUBeamer 贡献插件！

            以下是插件文档的预览：

            {0}
        with:
          type: create
          issue_number: ${{ github.event.number }}
          token: ${{ secrets.GITHUB_TOKEN }}
          body: >
            ${{
              format(
                join(fromJSON(steps.contrib_png.outputs.markdown_urls), '  ')
              )
            }}
      # - uses: jungwinter/comment@v1
      #   if: github.event_name == 'push'
      #   env:
      #     MESSAGE: |
      #       ### {0}

      #       @{1} #{2}

      #       {3}
      #   with:
      #     type: create
      #     issue_number: 1 # to be replaced by the good first issue number
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     body: >
      #       ${{
      #         format(
      #           fromJSON(github.event.issue.title)
      #           fromJSON(github.event.issue.sender.id),
      #           fromJSON(github.event.issue.number),
      #           join(fromJSON(steps.contrib_png.outputs.markdown_urls), '  '),
      #         )
      #       }}